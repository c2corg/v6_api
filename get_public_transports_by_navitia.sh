#!/bin/bash

# Configuration
API_KEY="eb6b9684-0714-4dd9-aba4-ce47c3368666"
SERVICE_NAME="postgresql"
DB_USER="postgres"
DB_NAME="c2corg"
WAYPOINT_ID=104460  # ID du waypoint à tester
DISTANCE=5000 # Distance maximale entre un waypoint et un stop_area, en mètres
WALKING_SPEED=1.12 #Distance parcourue en m/s
DURATION=$(echo "scale=0; $DISTANCE / $WALKING_SPEED" | bc)


# Fonction pour récupérer le dernier document_id utilisé
get_last_document_id() {
    docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -t -c "SELECT MAX(document_id) FROM guidebook.documents;" | tr -d ' '
}

# Récupérer les coordonnées du waypoint via le backend
lon_lat=$(docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -t -c "
    SELECT ST_X(ST_Transform(geom, 4326)) || ',' || ST_Y(ST_Transform(geom, 4326)) 
    FROM guidebook.documents_geometries 
    WHERE document_id = $WAYPOINT_ID;
" | tr -d ' ')

# Extraire longitude et latitude
lon=$(echo "$lon_lat" | cut -d',' -f1)
lat=$(echo "$lon_lat" | cut -d',' -f2)

echo "Coordonnées extraites de la base de données: ($lon, $lat)..."

# Vérifier que les coordonnées ont bien été récupérées
if [[ -z "$lon" || -z "$lat" || "$lon" == "null" || "$lat" == "null" ]]; then
    echo "Erreur : Impossible de récupérer les coordonnées du waypoint $WAYPOINT_ID."
    exit 1
fi

isInFrance=$(docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -t -c "
    SELECT st_intersects(
        st_setsrid(
            ST_GeomFromGeoJSON(
                jsonb_extract_path_text(
        ('{\"type\":\"FeatureCollection\",\"name\":\"france_plus_6_light_arrondi\",\"crs\":{\"type\":\"name\",
        \"properties\":{\"name\":\"urn:ogc:def:crs:OGC:1.3:CRS84\"}},\"features\":[{\"type\":\"Feature\",\"properties\":{\"ID\":\"1\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[
        [[[-4.07911,47.67443],[-4.26830,47.73639],[-4.37483,47.74235],[-4.41891,47.75251],[-4.44575,47.77250],[-4.46402,47.81274],[-4.45573,47.84096],[-4.43471,47.85950],[-4.45838,47.90089],[-4.48354,47.92505],[-4.53489,47.95124],[-4.56794,47.94604],[-4.75748,47.98263],[-4.78232,47.99379],[-4.82129,47.97791],[-4.88364,47.98169],[-4.93352,48.00638],[-4.95071,48.03278],[-4.93897,48.06899],[-4.89741,48.09373],[-4.61256,48.13059],[-4.72173,48.27567],[-4.87390,48.25288],[-5.08320,48.38500],[-5.11573,48.38180],[-5.16007,48.39189],[-5.19773,48.41031],[-5.22075,48.44067],[-5.21437,48.47322],[-5.15817,48.52222],[-5.12281,48.53495],[-5.06130,48.53779],[-5.00818,48.52292],[-4.87957,48.43826],[-4.85026,48.55310],[-4.60954,48.68739],[-4.34159,48.73214],[-4.25663,48.71531],[-4.22598,48.73384],[-4.11887,48.75416],[-4.10727,48.77627],[-4.04918,48.80415],[-3.98391,48.80466],[-3.92314,48.78131],[-3.88501,48.75326],[-3.84328,48.77156],[-3.69178,48.80666],[-3.67788,48.82844],[-3.55100,48.92580],[-3.44901,48.95388],[-3.40871,48.95126],[-3.37159,48.93293],[-3.35432,48.89534],[-3.07114,48.94502],[-2.91359,48.89104],[-2.73522,48.62797],[-2.66063,48.59441],[-2.55159,48.67843],[-2.34119,48.73975],[-2.28196,48.73652],[-2.19452,48.68685],[-2.09168,48.73472],[-1.83622,48.77509],[-1.78227,48.76494],[-1.75330,48.73860],[-1.74608,48.67265],[-1.66811,48.66523],[-1.59445,48.67800],[-1.69550,48.83764],[-1.68657,48.85911],[-1.65618,48.88039],[-1.67763,49.13790],[-1.68277,49.17215],[-1.71164,49.19431],[-1.81681,49.31932],[-1.86378,49.33282],[-1.88371,49.34963],[-1.97159,49.53256],[-1.95867,49.56515],[-1.92550,49.58974],[-1.93086,49.61206],[-1.99116,49.62913],[-2.02798,49.66301],[-2.03782,49.70661],[-2.01731,49.74939],[-1.96909,49.77634],[-1.90787,49.78307],[-1.86791,49.77130],[-1.81044,49.76448],[-1.76664,49.73848],[-1.54760,49.71669],[-1.51093,49.74487],[-1.36607,49.76030],[-1.23847,49.74754],[-1.20682,49.73487],[-1.16171,49.67297],[-1.07967,49.53122],[-1.06341,49.50352],[-0.99666,49.45132],[-0.81807,49.41212],[-0.38087,49.38623],[-0.32776,49.37247],[-0.25819,49.34538],[-0.21467,49.34090],[0.04631,49.42799],[-0.01083,49.49088],[-0.01542,49.52561],[-0.00427,49.55300],[0.05267,49.63156],[0.03530,49.65858],[0.04067,49.68312],[0.06334,49.70683],[0.10121,49.72131],[0.52994,49.89568],[0.60395,49.91423],[0.93926,49.97110],[1.00944,49.97063],[1.37894,50.13609],[1.46214,50.24571],[1.45454,50.29157],[1.49043,50.47679],[1.50060,50.54773],[1.47567,50.70054],[1.48966,50.76145],[1.51885,50.78256],[1.49372,50.84771],[1.50705,50.89568],[1.54295,50.91884],[1.60337,50.92896],[1.65025,50.96646],[1.69747,50.98890],[1.94268,51.04550],[2.08222,51.06770],[2.10634,51.08428],[2.15029,51.09697],[2.21947,51.09148],[2.32038,51.11122],[2.39139,51.10641],[2.51631,51.13973],[2.55990,51.14196],[2.59625,51.13212],[2.62080,51.11438],[2.71660,50.94130],[2.69279,50.91125],[2.69693,50.87339],[2.74746,50.86443],[2.78912,50.84473],[2.86890,50.77336],[2.89981,50.79461],[3.10361,50.84759],[3.19868,50.83347],[3.27084,50.76364],[3.29868,50.75452],[3.34138,50.71801],[3.34987,50.67724],[3.33577,50.64941],[3.36248,50.60562],[3.36638,50.56390],[3.39458,50.55649],[3.44992,50.58454],[3.52083,50.58234],[3.57747,50.56264],[3.58990,50.55280],[3.63552,50.54780],[3.66810,50.53473],[3.73316,50.48593],[3.75608,50.42735],[3.75703,50.40485],[3.80952,50.40904],[3.86463,50.40558],[3.91111,50.39131],[4.01547,50.41258],[4.04903,50.41026],[4.08746,50.39650],[4.13778,50.35891],[4.25724,50.31665],[4.30210,50.27142],[4.30129,50.23863],[4.27945,50.21349],[4.24674,50.19310],[4.24070,50.17932],[4.27255,50.15936],[4.28591,50.12202],[4.30055,50.10882],[4.31404,50.07864],[4.30421,50.04424],[4.27033,50.01937],[4.31071,50.02299],[4.44739,49.99660],[4.47457,50.00040],[4.50658,50.01863],[4.55483,50.03443],[4.60224,50.03977],[4.59768,50.07657],[4.63238,50.12453],[4.67667,50.14685],[4.71716,50.18111],[4.74745,50.19229],[4.77622,50.21328],[4.81070,50.22227],[4.84975,50.22026],[4.88241,50.20698],[4.93188,50.19454],[4.96941,50.16465],[4.97969,50.13805],[4.95722,50.10126],[4.95104,50.07122],[4.92364,50.04853],[4.92063,50.02068],[4.90319,49.98737],[4.95252,49.95035],[4.97267,49.91502],[4.96588,49.88083],[4.94561,49.85577],[5.01824,49.85227],[5.05584,49.83820],[5.07221,49.82225],[5.12456,49.81450],[5.15675,49.79901],[5.18907,49.76653],[5.23435,49.74629],[5.26124,49.74974],[5.31741,49.74002],[5.39561,49.68996],[5.41039,49.67223],[5.44813,49.65868],[5.49769,49.62540],[5.53602,49.57858],[5.57315,49.57985],[5.60973,49.59971],[5.65888,49.60707],[5.70326,49.59996],[5.73793,49.61348],[5.78412,49.61589],[5.88976,49.58375],[5.91693,49.55531],[5.96540,49.55206],[6.01009,49.53931],[6.04170,49.51721],[6.05809,49.51859],[6.08494,49.53994],[6.14528,49.56057],[6.19575,49.56172],[6.25167,49.56806],[6.31913,49.55067],[6.36476,49.52233],[6.41390,49.52999],[6.46201,49.52617],[6.50794,49.51235],[6.58307,49.47935],[6.62772,49.44720],[6.63681,49.42692],[6.66022,49.40981],[6.68312,49.37655],[6.67556,49.34451],[6.72242,49.32199],[6.74624,49.30117],[6.76934,49.26147],[6.78386,49.25172],[6.81947,49.26993],[6.85159,49.27602],[6.89233,49.27135],[6.93254,49.27701],[6.97448,49.27080],[7.03794,49.24576],[7.07550,49.23799],[7.11039,49.20865],[7.13620,49.20515],[7.17801,49.18334],[7.26430,49.18074],[7.33682,49.22258],[7.42966,49.23717],[7.47524,49.23465],[7.52539,49.21948],[7.55773,49.20336],[7.57996,49.17899],[7.59550,49.13554],[7.64047,49.13059],[7.69527,49.11132],[7.74573,49.10704],[7.78016,49.11845],[7.82622,49.11518],[7.86314,49.09950],[7.93544,49.11140],[7.98536,49.10240],[8.02531,49.07926],[8.08556,49.06143],[8.12196,49.04184],[8.16454,49.03237],[8.24641,49.02734],[8.28113,49.01416],[8.30529,48.99101],[8.31403,48.96499],[8.29711,48.93411],[8.25626,48.91539],[8.20725,48.86169],[8.17860,48.79754],[8.12800,48.75298],[8.09098,48.73907],[8.04338,48.71072],[8.01461,48.67775],[7.94338,48.62194],[7.90865,48.60641],[7.88398,48.57505],[7.88795,48.52369],[7.87725,48.48855],[7.84722,48.46153],[7.83947,48.43280],[7.81309,48.38705],[7.82634,48.33042],[7.80217,48.28781],[7.76788,48.26975],[7.74403,48.20699],[7.68008,48.13892],[7.65114,48.07504],[7.65346,48.04897],[7.68217,48.02279],[7.69993,47.98796],[7.69466,47.94789],[7.66173,47.91263],[7.65806,47.88221],[7.64153,47.86098],[7.64120,47.83114],[7.61228,47.77819],[7.62527,47.75260],[7.62480,47.71655],[7.60289,47.68297],[7.62297,47.67121],[7.66435,47.62638],[7.67199,47.59067],[7.65822,47.55486],[7.63651,47.53475],[7.60757,47.52381],[7.58745,47.48166],[7.56163,47.45534],[7.50993,47.43126],[7.44136,47.38849],[7.39508,47.37855],[7.32663,47.38433],[7.26195,47.36751],[7.22050,47.36964],[7.13701,47.32619],[7.11688,47.29935],[7.08025,47.28082],[7.06220,47.26220],[7.03299,47.24891],[7.02973,47.22419],[7.01445,47.20698],[6.94693,47.16737],[6.92266,47.13316],[6.89733,47.11320],[6.84528,47.08398],[6.81761,47.07520],[6.79744,47.05387],[6.79079,47.02993],[6.73839,46.99212],[6.71584,46.98589],[6.69092,46.96121],[6.65744,46.94509],[6.53232,46.91529],[6.54316,46.88609],[6.53530,46.83606],[6.52123,46.81710],[6.53658,46.78757],[6.52109,46.74870],[6.48517,46.71818],[6.45273,46.70440],[6.42116,46.68233],[6.32988,46.64602],[6.27666,46.60621],[6.22219,46.57222],[6.23319,46.55552],[6.23151,46.52958],[6.21541,46.50399],[6.18088,46.48151],[6.16120,46.45291],[6.16284,46.44136],[6.21857,46.41438],[6.23513,46.39568],[6.26411,46.41300],[6.30847,46.42452],[6.35626,46.42345],[6.39233,46.41115],[6.41443,46.41533],[6.44884,46.44290],[6.50936,46.45838],[6.55547,46.45169],[6.63350,46.46001],[6.73069,46.46166],[6.82468,46.44661],[6.87202,46.42105],[6.88390,46.37872],[6.87247,46.35376],[6.91367,46.32894],[6.93708,46.30211],[6.94233,46.27741],[6.92096,46.22679],[6.88693,46.19357],[6.88736,46.17812],[6.94038,46.16937],[6.96951,46.14731],[6.97209,46.11214],[6.99383,46.10103],[7.02525,46.06469],[7.08175,46.01872],[7.11327,45.96477],[7.12174,45.92223],[7.11332,45.89826],[7.08073,45.87682],[7.07019,45.85301],[7.03880,45.82626],[7.00178,45.81574],[6.98216,45.80175],[6.92339,45.78758],[6.88458,45.77420],[6.89182,45.73925],[6.94288,45.72637],[6.96744,45.70838],[6.98527,45.70675],[7.04317,45.68515],[7.07141,45.66115],[7.07816,45.62991],[7.06247,45.60317],[7.07307,45.57525],[7.07367,45.54673],[7.10409,45.53600],[7.12332,45.52035],[7.15017,45.51178],[7.17263,45.49357],[7.18054,45.47220],[7.22398,45.45367],[7.25163,45.43311],[7.26163,45.40309],[7.23592,45.34212],[7.20268,45.30704],[7.21095,45.29144],[7.20906,45.23854],[7.17351,45.20252],[7.14666,45.19053],[7.12618,45.17031],[7.07696,45.15639],[7.02401,45.15979],[6.99175,45.12724],[6.96639,45.11931],[6.95131,45.10198],[6.91692,45.08548],[6.86420,45.07442],[6.83711,44.93567],[6.88754,44.90600],[6.90155,44.91296],[6.94727,44.91628],[7.04617,44.88557],[7.08746,44.85268],[7.09886,44.81612],[7.09108,44.79685],[7.09867,44.76133],[7.13774,44.73029],[7.14980,44.70039],[7.15087,44.67019],[7.12970,44.64265],[7.10109,44.63028],[7.03982,44.62847],[7.03968,44.60403],[7.00769,44.57463],[6.99495,44.54320],[6.94845,44.51149],[7.01020,44.46034],[7.02241,44.43743],[7.01976,44.41365],[7.00355,44.39204],[6.97925,44.38035],[6.99291,44.36391],[7.05511,44.31341],[7.06804,44.28550],[7.09740,44.28371],[7.15902,44.26028],[7.21345,44.25169],[7.25082,44.22688],[7.26893,44.22336],[7.30425,44.20040],[7.36124,44.19781],[7.40539,44.17769],[7.44562,44.18222],[7.48627,44.19659],[7.54670,44.20908],[7.57338,44.20939],[7.60252,44.22521],[7.63814,44.23214],[7.68708,44.23068],[7.72349,44.22025],[7.75731,44.18485],[7.75163,44.13853],[7.79168,44.09293],[7.78220,44.03993],[7.76451,44.01272],[7.74227,43.99806],[7.73196,43.96374],[7.69902,43.93166],[7.63804,43.90487],[7.63018,43.87830],[7.61286,43.85995],[7.58214,43.84709],[7.60196,43.80237],[7.60198,43.77426],[7.58385,43.74767],[7.55272,43.72987],[7.54077,43.71180],[7.51241,43.69868],[7.47992,43.69658],[7.47236,43.68787],[7.21178,43.52897],[7.05113,43.44573],[7.01359,43.45586],[6.74740,43.16730],[6.71682,43.15078],[6.59957,43.02907],[6.57063,43.00459],[6.53657,42.99321],[6.52088,42.97756],[6.43351,42.94101],[6.37987,42.93483],[6.33075,42.95116],[6.31529,42.96287],[6.30110,42.95246],[6.25785,42.94341],[6.21473,42.92871],[6.17067,42.93221],[6.12703,42.95058],[6.09612,42.97471],[6.05845,42.98145],[6.01691,43.00203],[5.99547,43.02924],[5.96167,43.01447],[5.92165,43.01267],[5.88102,42.99467],[5.84565,42.99311],[5.79824,43.00070],[5.76921,43.01702],[5.72256,43.03078],[5.69144,43.05655],[5.68009,43.09213],[5.64307,43.10819],[5.60714,43.10425],[5.56948,43.11286],[5.52920,43.12924],[5.50914,43.14461],[5.46339,43.14768],[5.44616,43.13128],[5.41111,43.11730],[5.37230,43.11828],[5.32495,43.13457],[5.28805,43.16793],[5.26331,43.15043],[5.21862,43.14493],[5.17351,43.16302],[5.15558,43.19552],[5.04602,43.27094],[4.82146,43.27508],[4.76584,43.29499],[4.73210,43.29690],[4.65545,43.29178],[4.56593,43.30871],[4.52504,43.32569],[4.49195,43.35172],[4.42643,43.39240],[4.33671,43.40199],[4.24994,43.40488],[4.17378,43.41352],[4.09981,43.43616],[4.06151,43.46009],[4.03867,43.49966],[3.76197,43.34961],[3.68313,43.33732],[3.54064,43.21709],[3.50781,43.20943],[3.47112,43.21467],[3.41035,43.23246],[3.20287,43.09961],[3.13859,42.97684],[3.13340,42.91064],[3.11867,42.57956],[3.17004,42.56537],[3.20544,42.54028],[3.24481,42.42022],[3.21945,42.39288],[3.07513,42.37245],[3.03987,42.38375],[3.00077,42.41410],[2.88847,42.40592],[2.86576,42.39526],[2.84314,42.37500],[2.73194,42.30883],[2.69718,42.29106],[2.65658,42.28678],[2.58989,42.29464],[2.55519,42.28078],[2.50735,42.28138],[2.44723,42.29361],[2.37787,42.34311],[2.25953,42.37584],[2.10807,42.31133],[2.01983,42.29380],[1.97954,42.30048],[1.94589,42.31711],[1.89978,42.35818],[1.88618,42.39394],[1.66663,42.46645],[1.37162,42.57841],[1.34514,42.62616],[1.30092,42.66394],[1.14763,42.65729],[1.06046,42.72479],[0.89898,42.73956],[0.74154,42.78897],[0.75542,42.70625],[0.74424,42.67039],[0.72420,42.65011],[0.69122,42.63798],[0.37556,42.64742],[0.31463,42.62148],[0.26563,42.62421],[0.18669,42.67273],[-0.01008,42.63099],[-0.08681,42.64357],[-0.16673,42.69085],[-0.18651,42.72250],[-0.30811,42.78007],[-0.36171,42.74975],[-0.56741,42.72536],[-0.80580,42.89938],[-1.17384,42.95968],[-1.37256,42.97610],[-1.46144,42.99438],[-1.50442,43.01864],[-1.53440,43.05264],[-1.54584,43.09280],[-1.69165,43.24928],[-1.72217,43.24231],[-1.75696,43.24570],[-1.86557,43.37687],[-1.85338,43.40439],[-1.68274,43.45457],[-1.65379,43.47320],[-1.52005,43.65541],[-1.38701,44.15027],[-1.32569,44.49296],[-1.33630,44.64737],[-1.22750,45.44625],[-1.31434,45.69935],[-1.32973,45.84542],[-1.44509,45.91801],[-1.46211,45.94099],[-1.47272,45.97673],[-1.46913,45.99348],[-1.54548,46.14772],[-1.59096,46.16554],[-1.63479,46.22055],[-1.68720,46.37304],[-1.80860,46.43489],[-1.84677,46.44423],[-1.88541,46.47429],[-1.92602,46.57955],[-1.96493,46.61240],[-1.98206,46.63545],[-2.17284,46.76472],[-2.20831,46.79030],[-2.24867,46.90613],[-2.29015,46.90886],[-2.31948,46.92217],[-2.43281,47.02100],[-2.47951,47.21194],[-2.61025,47.25894],[-2.90632,47.27812],[-2.94923,47.30047],[-2.97949,47.30217],[-3.10858,47.22496],[-3.17900,47.23969],[-3.23196,47.23896],[-3.27198,47.25050],[-3.31802,47.28186],[-3.34125,47.34024],[-3.33763,47.38891],[-3.32455,47.41350],[-3.28881,47.43809],[-3.24017,47.51781],[-3.25681,47.54839],[-3.48483,47.56861],[-3.55483,47.59592],[-3.58239,47.61846],[-3.59415,47.64322],[-3.58706,47.67359],[-3.55854,47.69398],[-3.57566,47.71104],[-3.70627,47.72569],[-3.76769,47.72057],[-3.88686,47.68466],[-3.91341,47.66656],[-3.96731,47.65000],[-4.02867,47.65149],[-4.07911,47.67443],[-4.07911,47.67443]]],
        [[[8.46950,42.39154],[8.57914,42.46468],[8.65023,42.60772],[8.92644,42.69971],[8.98318,42.69593],[8.99450,42.72324],[9.04679,42.76056],[9.09470,42.78090],[9.25434,42.87086],[9.26910,43.00637],[9.29375,43.03884],[9.38759,43.07943],[9.44361,43.07380],[9.52442,43.02100],[9.54419,42.98908],[9.56273,42.78356],[9.52129,42.67509],[9.59316,42.58909],[9.63141,42.19529],[9.62687,42.11982],[9.61614,42.08410],[9.51670,41.97161],[9.48559,41.94158],[9.47207,41.87527],[9.46390,41.65199],[9.43732,41.61105],[9.44778,41.48830],[9.37381,41.35306],[9.27949,41.28229],[9.04126,41.35769],[9.01857,41.40545],[8.75257,41.50923],[8.72290,41.53241],[8.70302,41.59089],[8.72499,41.66978],[8.61019,41.70076],[8.51721,41.85814],[8.51596,41.88796],[8.53966,41.92284],[8.52071,41.95238],[8.48595,42.14446],[8.46911,42.24601],[8.46950,42.39154],[8.46950,42.39154]]],
        [[[-2.47925,46.72485],[-2.47331,46.74550],[-2.44469,46.77093],[-2.41059,46.78342],[-2.36116,46.78690],[-2.31112,46.77764],[-2.26518,46.76002],[-2.22496,46.72970],[-2.20830,46.70933],[-2.20494,46.68253],[-2.23002,46.64900],[-2.27717,46.63402],[-2.32529,46.63199],[-2.36766,46.63736],[-2.43641,46.66082],[-2.47229,46.69821],[-2.47925,46.72485],[-2.47925,46.72485]]]
        ]}}]}')::jsonb, 
                    'features', '0', 'geometry'
                )
            ), 4326
        ),
        st_setsrid(st_point($lon, $lat), 4326)
    );
" | tr -d ' ')

echo "Le point est-il en France ? --> $isInFrance"

if [[ "$isInFrance" == "t" ]]; then

    echo "Traitement du waypoint ID: $WAYPOINT_ID ($lon, $lat)..."

    # Requête à Navitia pour récupérer les stops proches
    response=$(curl -s -H "Authorization: $API_KEY" "https://api.navitia.io/v1/coord/$lon%3B$lat/places_nearby?type%5B%5D=stop_area&count=5&distance=$DISTANCE")

    # Extraire tous les noms et IDs des arrêts dans des fichiers temporaires
    echo "$response" | jq -r '.places_nearby[] | select(.embedded_type == "stop_area") | .name' > /tmp/stop_names.txt
    echo "$response" | jq -r '.places_nearby[] | select(.embedded_type == "stop_area") | .id' > /tmp/stop_ids.txt
    echo "$response" | jq -r '.places_nearby[] | select(.embedded_type == "stop_area") | .stop_area.coord.lat' > /tmp/lat.txt
    echo "$response" | jq -r '.places_nearby[] | select(.embedded_type == "stop_area") | .stop_area.coord.lon' > /tmp/lon.txt

    # Compter le nombre d'arrêts
    stop_area_count=$(wc -l < /tmp/stop_ids.txt)
    echo "Nombre total d'arrêts à traiter: $stop_area_count"

    # Parcourir les arrêts en parallèle
    for ((i=1; i<=stop_area_count; i++)); do
        stop_name=$(sed "${i}q;d" /tmp/stop_names.txt)
        stop_id=$(sed "${i}q;d" /tmp/stop_ids.txt)
        lat_stop=$(sed "${i}q;d" /tmp/lat.txt)
        lon_stop=$(sed "${i}q;d" /tmp/lon.txt)

        echo "[$i/$stop_area_count] Traitement du stop: '$stop_name' avec ID: $stop_id, de coordonnées $lat_stop et $lon_stop"

        # Récupérer la durée du trajet à pied via Navitia
        journey_response=$(curl -s -H "Authorization: $API_KEY" "https://api.navitia.io/v1/journeys?to=$lon%3B$lat&walking_speed=$WALKING_SPEED&max_walking_direct_path_duration=$DURATION&direct_path_mode%5B%5D=walking&from=$stop_id&direct_path=only_with_alternatives")

        # Vérifier si Navitia a trouvé une solution ou renvoie une erreur
        has_error=$(echo "$journey_response" | jq -r 'has("error")')

        if [[ "$has_error" == "true" ]]; then
            echo "❌ Stop ignoré : $stop_name (aucun trajet à pied trouvé)"
            continue
        fi

        # Extraire la durée du trajet à pied (en secondes)
        duration=$(echo "$journey_response" | jq -r '.journeys[0].duration // 0')

        # Convertir la durée en distance (1.12m/s => 1.12 * durée / 1000 pour obtenir en km)
        distance_km=$(awk "BEGIN {printf \"%.2f\", ($duration * 1.12) / 1000}")

        echo "✅ Stop validé : $stop_name - Distance réelle à pied : $distance_km km"

        # Vérifier si le stop existe déjà
        existing_stop_id=$(docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -t -c "SELECT document_id FROM guidebook.stops WHERE navitia_id = '$stop_id';" | tr -d ' ')

        if [[ -z "$existing_stop_id" ]]; then
            echo "Nouveau stop_area trouvé: $stop_name"

            # Faire la requête pour récupérer les informations du stop_area
            stop_info=$(curl -s -H "Authorization: $API_KEY" "https://api.navitia.io/v1/places/$stop_id")

            # Boucle sur les lines
            echo "$stop_info" | jq -r '.places[0].stop_area.lines[].name' > /tmp/lines.txt
            echo "$stop_info" | jq -r '.places[0].stop_area.lines[].code' > /tmp/code.txt
            echo "$stop_info" | jq -r '.places[0].stop_area.lines[].network.name' > /tmp/network.txt

            # Compter le nombre d'arrêts
            stop_count=$(wc -l < /tmp/lines.txt)
            echo "Nombre total de points à traiter pour le stop_area: $stop_count"

            # Parcourir les arrêts en parallèle
            for ((j=1; j<=stop_count; j++)); do
                line_full_name=$(sed "${j}q;d" /tmp/lines.txt)
                line_name=$(sed "${j}q;d" /tmp/code.txt)
                operator_name=$(sed "${j}q;d" /tmp/network.txt)

                echo "stop_name: $stop_name"
                echo "line_name: $line_name"
                echo "line_full_name: $line_full_name"
                echo "operator_name: $operator_name"

                # Récupérer le dernier document_id et calculer les nouveaux
                last_id=$(get_last_document_id)
                new_stop_id=$((last_id + 1))

                # Insérer dans documents et stops
                docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -c "INSERT INTO guidebook.documents (document_id, type) VALUES ($new_stop_id, 's');"

                # Insérer dans la base de données avec échappement des apostrophes
                safe_stop_name=$(echo "$stop_name" | sed "s/'/''/g")
                safe_line_full_name=$(echo "$line_full_name" | sed "s/'/''/g") 
                safe_operator_name=$(echo "$operator_name" | sed "s/'/''/g")

                docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -c "INSERT INTO guidebook.stops (document_id, navitia_id, stop_name, line, operator) VALUES ($new_stop_id, '$stop_id', '$safe_stop_name', 'Bus $line_name - $safe_line_full_name', '$safe_operator_name');"

                docker-compose exec -T $SERVICE_NAME psql -v ON_ERROR_STOP=1 -U $DB_USER -d $DB_NAME -c "INSERT INTO guidebook.documents_geometries (version, document_id, geom, geom_detail) VALUES (1, $new_stop_id, ST_Transform(ST_SetSRID(ST_MakePoint($lon_stop, $lat_stop), 4326), 3857), NULL) ON CONFLICT (document_id) DO UPDATE SET geom = ST_Transform(ST_SetSRID(ST_MakePoint($lon_stop, $lat_stop), 4326), 3857);"
                
                # Ajouter la relation dans waypoints_stops
                last_doc_id=$(get_last_document_id)
                new_waypoint_stop_id=$((last_doc_id + 1))
                echo "Création de la relation waypoint-stop avec document_id: $new_waypoint_stop_id"
                
                docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -c "INSERT INTO guidebook.documents (document_id, type) VALUES ($new_waypoint_stop_id, 'z');"

                docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -c "INSERT INTO guidebook.waypoints_stops (document_id, stop_id, waypoint_id, distance) VALUES ($new_waypoint_stop_id, $new_stop_id, $WAYPOINT_ID, $distance_km);"

                echo "✅ Stop ajouté avec distance réelle à pied : $distance_km km"
                echo "----------------------------------------------"
            done
        else
            new_stop_id=$existing_stop_id
            echo "Stop déjà existant avec ID: $existing_stop_id"
            last_doc_id=$(get_last_document_id)
            new_waypoint_stop_id=$((last_doc_id + 1))
            echo "Création de la relation waypoint-stop avec document_id: $new_waypoint_stop_id"
            
            docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -c "INSERT INTO guidebook.documents (document_id, type) VALUES ($new_waypoint_stop_id, 'z');"
            docker-compose exec -T $SERVICE_NAME psql -U $DB_USER -d $DB_NAME -c "INSERT INTO guidebook.waypoints_stops (document_id, stop_id, waypoint_id, distance) VALUES ($new_waypoint_stop_id, $new_stop_id, $WAYPOINT_ID, $distance_km);"

            echo "✅ Stop ajouté avec distance réelle à pied : $distance_km km"
            echo "----------------------------------------------"
        fi
    done

    # Nettoyage
    rm /tmp/stop_names.txt /tmp/stop_ids.txt /tmp/lat.txt /tmp/lon.txt
fi
